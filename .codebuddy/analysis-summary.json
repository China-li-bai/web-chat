{"title":"口语练习页面Local-First语音缓存优化","features":["本地语音缓存（wa-sqlite + 内存回退）","智能缓存键（SHA-256: text|voiceStyle|lang|provider:version）","按钮来源指示（本地缓存/网络生成）与一键清理","降级与错误处理（失败不崩溃，提示友好）"],"tech":{"Web":{"arch":"react","component":null},"database":"wa-sqlite（IDB VFS，失败回退内存）","hash":"SubtleCrypto (SHA-256) + Node crypto fallback","modules":["src/lib/hash.js + 测试","src/lib/ttsCacheDao.memory.js + 测试","src/lib/ttsCacheDao.sqlite.js + 测试（默认强制回退供CI）","src/services/ttsWithCache.js + 测试","src/services/ttsCacheService.js（对外封装）","src/pages/Practice.jsx 集成"]},"design":"在“🤖 AI语音”按钮旁用 Tooltip 显示来源（本地缓存/网络），提供“清理缓存”按钮；交互保持现状不打扰用户。","plan":{"需求确认（移除第三方哈希库）":"done","生成todos任务文档":"done","安装和配置wa-sqlite依赖包":"done","创建SQLite数据库初始化脚本和表结构":"done","实现语音缓存数据库操作类（增删改查）":"done","实现文本+语音参数的SHA-256哈希键":"done","扩展geminiTTS模块，集成本地缓存查询写入":"done","修改Practice页面组件，接入缓存读取/写入":"done","添加缓存状态UI指示器和用户反馈":"done","实现缓存管理功能（清理、统计）":"doing","添加错误处理和降级机制":"doing","测试缓存功能在不同场景下的表现":"doing"}}